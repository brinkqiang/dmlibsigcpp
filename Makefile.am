
# it includes all the autostuff automatically, you just name the
# other stuff here
EXTRA_DIST = autogen.sh sigc++config.h.in libsigc++-2.0.spec.in
# ACLOCAL_FLAGS = -I scripts

SUBDIRS      = sigc++ tests docs examples scripts MSVC_Net2003
DIST_SUBDIRS = $(SUBDIRS)

sigc_configdir = $(libdir)/sigc++-2.0/include
sigc_config_DATA = sigc++config.h

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = sigc++-2.0.pc

all-local:
	@echo "*** Everything completed ***"

dist-hook:
	@echo; echo; \
	echo "**********************************************************"; \
	echo "* IMPORTANT NOTICE:                                      *"; \
	echo "*                                                        *"; \
	echo "* Be sure you have done a complete build before running  *"; \
	echo "* 'make dist' or 'make distcheck', because otherwise     *"; \
	echo "* the tarball will _not_ contain the dependency rules    *"; \
	echo "* generated by the compiler.                             *"; \
	echo "**********************************************************"; \
	echo; echo \
	cp libsigc++-2.0.spec $(distdir)


include $(top_srcdir)/docs/Makefile_web.am_fragment

doc_tarball_files = \
	docs/index.html docs/images/*.gif docs/reference/html
#	docs/FAQ/html docs/images/*.gif \
#	docs/internal/*.txt docs/internal/*.dia docs/reference/html \
#	docs/tutorial/figures/*.png docs/tutorial/html

# This doesn't work very well in a $(srcdir) != $(builddir) setup,
# but this target is for maintainer use only anyway.

libsigc-docs.tar.gz:
	find examples -name '*.cc' -o -name '*.h' -o -name '*.xpm' -o -name '*.xml' | \
	tar cf - --files-from - $(doc_tarball_files) | gzip -c --best >$@

# Upload documentation and examples:

post-html-recursive:
	list='docs examples'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) post-html); \
	done

post-html-local: libsigc-docs.tar.gz
	rsync $(rsync_args) libsigc-docs.tar.gz $$USER@shell.sourceforge.net:$(web_path_libsigc2)

post-html: post-html-recursive post-html-local

doc-clean-recursive:
	(cd docs && $(MAKE) $(AM_MAKEFLAGS) doc-clean)

doc-clean: doc-clean-recursive

doc-rebuild:
	(cd docs && $(MAKE) $(AM_MAKEFLAGS) doc-rebuild)

.PHONY: post-html post-html-local post-html-recursive doc-clean doc-clean-recursive doc-rebuild

